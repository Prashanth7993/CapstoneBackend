# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger: none

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '0e40140e-7ed4-4094-b87e-b8cee5f431d5'
  imageRepository: 'frontendfinalimage'
  containerRegistry: 'mysharedacr1234.azurecr.io'
  tag: '1.0.4'
  imagePullSecret: 'mysharedacr12341292f29b-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: DeployOnAks1
  displayName: DeployOnAks1
  jobs:
  - deployment: DeployOnAks1
    displayName: DeployOnAks1
    pool:
      name: Default
    environment: 'CapStoneProjectAzure-3330.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Build.SourcesDirectory)/Frontend-Manifests/deployment.yml
                $(Build.SourcesDirectory)/Frontend-Manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

- stage: DeployOnaks2
  displayName: Deploy stage
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      name: Default
    environment: 'CapStoneProjectAzure-1680.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Build.SourcesDirectory)/Frontend-Manifests/deployment.yml
                $(Build.SourcesDirectory)/Frontend-Manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)


